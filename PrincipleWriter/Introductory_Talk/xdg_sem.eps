%!PS-Adobe-2.0 EPSF-1.2
%%Title: sem1_xdag.2.dvi
%%Creator: dvips(k) 5.95a Copyright 2005 Radical Eye Software
%%CreationDate: 2007-05-22 14:07 sem1_xdag.2.eps
%%For:setzsetz setz
%%Pages: 1
%%DocumentFonts:
%%BoundingBox: 154 609 410 691
%%EndComments

%%BeginProlog
%%BeginPreview: 256 82 8 574
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000002288887700000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000117799882200000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000044dd8855aacc110000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000011cc995588dd44000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000dd4400000088770000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000778800000044dd000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000022dd0000000044bb0000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 334444c04400000000dd110000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000ee0000000055aa0000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000022444466888899bbbbeeffdd
% bbbb99bb5500000000ee000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000aa99000011cc550000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000011444455888888bbbbccffeebbbbaa888877444422000000
% 00000055cc11000099aa000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000011bbccbbee77000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000334444888888bbbbbbffffbbbbbb888888444433000000000000000000000000000000
% 0000000088eebbddaa11000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000229b0000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000224444668888aa
% bbbbeeffddbbbb888888554444110000000000000000000000000000000000000000000000000000
% 0000000000009b220000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000011444455888888bbbbddffeebbbbaa88886644
% 44220000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000000000000ff00000000000000
% 00000000000000000000444444888888bbbbbbffffbbbbbb88888844443300000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000000000000ff00000000002244
% 44778888aabbbbeeffccbbbb88888855444400000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000880000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000011441b00ff00ffffff0000eebbbb
% 99888866444422000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000088000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000444444888888bbbbccffffbbbb5700ffffff00ff0000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000334444778888aabbbbeeffccbbbb88888844444400000000000000ff00ff00ff0000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000011000000000000000011444466888899bbbb
% ddffddbbbb99888866444411000000000000000000000000000000000000ffff0000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000011000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000044449b888888bbbbccffffbbbbaa888877444433
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000077000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000005588882200000000000000000000000000000000000000
% 0000000000000000334444778888aabbbbffffccbbbb888888444444000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000aabb8888dd44000000112200000000000000000022444466
% 888899bbbbeeffddbbbb998888554444110000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000066bb00000033ee002299a84455888888bbbbccffeebbbbaa88
% 88774444220000000000000000000000000000000000330000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000033000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000995500000000cc85ffffc9bb88888844444400000000000000
% 00000000000000000000000000000000000000000000440000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000044000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000996600000000ddc4aab0a84e00000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000119bdd11000066cc114488aaddeebb8855220000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000055ee8880eebbcccc33000000000000447799cceebb886633000000
% 00000000000000000000000000000000000000000000440000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000044000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000011aacc33000022825d00000000000000000000000000447799bbffbb88
% 66330000000000000000000000000000000000000000440000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000044000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000066ee88000000000011000000000000000000000000000000000000003366
% 88bbffcc997744000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000022bbbb3300000000000000000000000000000000000000000000000000000000
% 000000336688bbeecc9977441100000000000000ff00000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000077dd77000000000000000000000000000000000000000000000000000000000000
% 0000000000000000225588bbeeddaa6400ff0000ff00000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000077000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000033bbbb2200000000000000000088000000000000000000000000000000000000000000
% 0000000000000000000000000011443f00ffff00ffff000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000011000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000088ee66000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000ff0000ff00ff00a2885522000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000033ccaa1100000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000ff0000ff00ff00447799cceebb88663300000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 1188dd55000000000000000000000000000011000000000000000000000000000000000000000000
% 0000000000000000000000000000000000ff000000ff00000000000000447788bbffbb8866440000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000077000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000044
% dd881100000000000000000000000000000077000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000336688bbffcc
% 99774400000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000000000000988dd
% 44000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000022
% 5588bbeecc9988441100000000220000000000448888440000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000ff00000f7611
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000225588bbddddaa8844209933000088cc7777dd7700000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000000000ff00ff00000000
% 00000000000000000000000000000000000044000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000880000000000000000000000000000000000
% 000000000000000000114488aadde9ff8840dd11000011ee22000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000088000000000000000000
% 000000000000000000000000000000000000000000000000000000000000ffff0000ffffff000000
% 00000000000000000000000000000000000044000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000066aa8880ad88000000008866000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000ffffff00ff00ff000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000002244668888bbccffccb88800000000aaa4330000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000ffffff00ff00000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000110000000000000000000000000000000000
% 3344668899bbddffbbbb8888554411000022dd33000044ee80ccdd88550000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000011000000000000000000
% 0000000000000000000000000000000000000000000000000000000033a20cff0000000000000000
% 00000000000000000000000000000000000077000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000007700000000000000000033447788aabbeeff
% bbbb8888444400000000000000000000000055eebbbbdd3300002266aaee99550000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000077000000000000000000
% 00000000000000000000000000000000000000000000000000000088ee5500000000000000000000
% 00000000000000000000000000000000000011000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000044448888bbbbffeebbaa887744330000
% 00000000000000000000000000000000000000008f69000000000000001166aaffaa661100000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000044ccaa110000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000001144558888bbbbffddbb998866443300000000000000000000
% 0000000000000000000000000000000000000000000000000000000000000000005599eeaa662200
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000
% 00000000000000000000000000000000000000000000001188dd5500000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000ffff000000ff00ff00
% 000000000000002244668888bbccffccbb8888664422330000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000000000000000000005599ddcc
% 4700ffff000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000033000000000000000000
% 0000000000000000000000000000000000000000000044dd88110000000000000000000000000000
% 000000000000000000000000000000000000880000000000000000000000000000ff00ff00ff000b
% 44668899bbddffbbbb88885544110000000000000000440000000000000000000000000000000000
% 00000000000000000000000000000000000000001100000000000000000000000000000000000033
% 2d00ff00ff00ffff0000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000044000000000000000000
% 00000000000000000000000000000000000000001199dd4400000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000000000000ffff00ffff000032
% bb888844440000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000005522000000000000000000000000000000000000
% 0000ff00ff000000ffffff0000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000
% 0000000000000000000000000000000000000055ee88110000000000000000000000000000000000
% 000000000000000000000000000000000000000000000044448888bbbbee3fffffff00ffffff0000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00ffffff00ffffff00ff000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000
% 000000000000000000000000000000000011aacc3300000000000000000000000000000000000000
% 00000000000000000000000000001144558890bbbbffddbb9988664433000000000000ffffffff00
% 00000000000000000000000000000000000000000000440000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00ff00000000ffff00ff000085551100000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000044000000000000000000
% 0000000000000000000000000000330077ee88000000000000000000000000000000000000000000
% 0000000000002244558888bbccffccbb8888ae442200000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000440000000000000000000000000000000000
% 00000000000000000000000000000000000000004422000000000000000000000000000000000000
% 000000000000000000ff000366aaeeaa661100000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000044000000000000000000
% 000000000000000000000000003398bbbb2200000000000000000000000000000000000000002244
% 668899bbddffbbbb8888554411000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000001100000000000000000000000000000000000000
% 0000000000000000000000000000005599eeaa772200000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000
% 00000000000000227788440011cceb9b000000000000000000000000000033447788aabbeeffbbbb
% 88884444000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000004488ddcc772211660000000055886611000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000
% 00000000000055dd8888cc9999cc88605d000000000044448888bbbbeeeebbaa8877444400000000
% 00000000000000000000000000000000000044000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000770000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000000000003388ddddc8991111ccaa8899dd220000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000077000000000000000000
% 000000000000ee33000000cc601188d29088bbbbffddbb9988774433000000000000000000000000
% 00000000000000000000000000000000000044000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000110000000000000000000000000000000000
% 00000000000000000000000000000000000000006622000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000007aebffcca08800000077aa0000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000011000000000000000000
% 000000000033bb000000006698aaffd8906644220000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000bb3300000000ff0000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000
% 000000000033cc000000007788000044770000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000bb3300000000ff0000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000
% 000000000000cc66000011dd44000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000077000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000770000000000000000000000000000000000
% 00000000000000000000000000000000000000003311000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000000000000000088aa00000088990000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000077000000000000000000
% 00000000000033ddbb99ee7700000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000011000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000003311000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000099dd88ccbb110000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000
% 00000000000000115d82220000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000339b4400000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000
% 00000000000000000011000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000110000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000088000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000880000000000000000000000000000000000
% 00000000000000000000000000000000000000005522000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000088000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000
% 00000000000000000011000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000011000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000110000000000000000000000000000000000
% 00000000000000000000000000000000000000001100000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000110000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000011000000000000000000
% 00000000000000002255000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000077000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000770000000000000000000000000000000000
% 00000000000000000000000000000000000000005522000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000770000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000077000000000000000000
% 000000000000000011bb000000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000077ffee8800000000000000000000000000000000000000
% 000000000000000000000000000000000000000088ffee6600000000000000000000000000000000
% 000000000000000000000000000000000000000000aa000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000077004411000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000033bbff7700000000000000
% 000000000000004499ff000000000000000000000000000000000000000000000000000000000000
% 0000000000000000000000000000000000dd0033ee00000000000000000000000000000000000000
% 0000000000000000000000000000000000000000dd00558800000000000000000000000000000000
% 000000000000000000000000000000000000000044ff000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000ffcc9900000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000bb6600aa00000000000000
% 000000000000000000ff000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000225500000000000000000000000000000000000000
% 00000000000000000000000000000000000000000088dd4400000000000000000000000000000000
% 000000000000000000000000000000000000003311ff000000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000bbddff88000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000ddddee7700000000000000
% 000000000000000000ff000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000033332200000000000000000000000000000000000000
% 0000000000000000000000000000000000000000000022ee00000000000000000000000000000000
% 00000000000000000000000000000000000000bbffffbb0000000000000000000000000000000000
% 000000000000000000000000000000000000000000000000000000000000883322ff000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 0000000000dd2222ff00000000000000
% 0000000000000044ffff440000000000000000000000000000000000000000000000000000000000
% 000000000000000000000000000000000088ffffcc00000000000000000000000000000000000000
% 000000000000000000000000000000000000000077ccff8800000000000000000000000000000000
% 000000000000000000000000000000000000000088ffbb0000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000033ddee77000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 000000000066eeee7700000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000
% 0044ff440000bbbb0000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000007733000000000000
% 00000000000000880000000000000000000000000000000000000000000000000000000000000000
% 00000000000000443300000000000000
% 000066660055bb000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000044440000000000000000000000000000
% 00000000000000000000000000000000000000004444000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000044440000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000009900000000000000
% 44440044440000000000000000000000000000000000000000000000000000000000000000004444
% 00000000000000770000000000000000
% 002233882244880066eeaa33ffddcc22ee3388000000000000000000000000000000000000000000
% 00000000000000000022ee33aa00dd66eeaa33eebbee0044ffffccee440000000000000000000000
% 0000000000000000000000000000000000000044ffff0066eecc0000000000000000000000000000
% 000000000000000000000000000000000066eecc66eeaa44ffff0000000000000000000000000000
% 0000000000000000000000000000000000ccee69eeddcc0066eeaa0066ee9900bbee990066eecc44
% ffff44ffff22dddd000000000000000000000000000000000000000000000000000000000044ffff
% 0066eecc0066ee990066eeaa22ee3388
% 0066008844662200ee44440088330000771188000000000000000000000000000000000000000000
% 000000000000000000006622ff22bbee444400884488000099225555000000000000000000000000
% 0000000000000000000000000000000000000000992200ee22ee0000000000000000000000000000
% 0000000000000000000000000000000000eeffbbee44440099220000000000000000000000000000
% 00000000000000000000000000000000005555007744ee00ee444400ee447711bb223300eeffbb00
% 99220099220033330000000000000000000000000000000000000000000000000000000000009922
% 00ee22ee00ee445500ee444400771188
% 44ff449955ff8800ccccff2288000000eeff77000000000000000000000000000000000000000000
% 00000000000000000000ddeeddee44ccccff228800dd7700eea8ffcc000000000000000000000000
% 0000000000000000000000000000000000000000ee8800ccee660000000000000000000000000000
% 0000000000000000000000000000000000bbff77ccccff22ee880000000000000000000000000000
% 0000000000000000000000000000000044ffcc11ddee6600ccccff22ccff444455bbdd11bbff7700
% ee8800ee8800dd66000000000000000000000000000000000000000000000000000000000000ee88
% 00ccee6600ccccff22ccccff22eeff77
% 00000000000000000000000000000000eebb11000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000000000000000bbbb00000000000022eebb00000000000000000000
% 00000000000000000000000000000000000000000000000000000000000000000000000000000000
% 00000000000000000000000000eebb11
%%EndImage
%%EndPreview
save countdictstack mark newpath /showpage {} def /setpagedevice {pop} def
%%EndProlog
%%Page 1 1
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips sem1_xdag.2.dvi -o sem1_xdag.2.eps
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2007.05.22:1407
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%!
% PostScript prologue for pstricks.tex.
% Version 97 patch 4, 04/05/10
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Atan { /atan load stopped { pop pop 0 } if } def
/Div { dup 0 eq { pop } { div } ifelse } def
/NET { neg exch neg exch T } def
/Pyth { dup mul exch dup mul add sqrt } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def }
def
/PathLength { flattenpath /z 0 def { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
} { /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
/pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
%
%%-------------- DG begin patch 15 ---------------%%
%/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
%PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
%mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
%/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
%0 } ifelse setdash stroke } def
/DashLine {
  dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def PathLength } ifelse
  /b ED /x1 ED /y1 ED /x ED /y ED 
  /z y x add y1 add x1 add def
  /Coef b a .5 sub 2 mul y mul sub z Div round 
  z mul a .5 sub 2 mul y mul add b exch Div def 
  /y y Coef mul def /x x Coef mul def /y1 y1 Coef mul def /x1 x1 Coef mul def
  x1 0 gt y1 0 gt x 0 gt y 0 gt and { [ y x y1 x1 ] 1 a sub y mul}
  { [ 1 0] 0 } ifelse setdash stroke
} def
%%-------------- DG end patch 15 ---------------%%
/DotLine { /b PathLength def /a ED /z ED /y CLW def /z y z add def a 0 gt
{ /b b a div def } { a 0 eq { /b b y sub def } { a -3 eq { /b b y add
def } if } ifelse } ifelse [ 0 b b z Div round Div dup 0 le { pop 1 } if
] a 0 gt { 0 } { y 2 div a -2 gt { neg } if } ifelse setdash 1
setlinecap stroke } def
/LineFill { gsave abs CLW add /a ED a 0 dtransform round exch round exch
2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
% DG/SR modification end
Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
% def
a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
pop pop } def
% DG/SR modification end
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { { /z DS def } { /z 0 def } ifelse /b ED 0 z DS SD b { 0 z DS
CLW sub SD } if 0 DS z add CLW 4 div sub moveto } def
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
/closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
load } if ] cvx newpath 3 1 roll T exec } def
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop } if
f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/Line { NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub
def n { Lineto } repeat CP 4 2 roll ArrowB L pop pop } if } def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
Lineto pop pop closepath } ifelse } def
/Diamond { /mtrx CM def T rotate /h ED /w ED dup 0 eq { pop } { CLW mul
neg /d ED /a w h Atan def /h d a sin Div h add def /w d a cos Div w add
def } ifelse mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2
div /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { NArray n 3 lt { n { pop pop } repeat } { BOC /n n 3 sub def
    n { NC } repeat EOC } ifelse } def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%% Version 97 patch 1, 99/12/16
%% Modified by Etienne Riga <etienne.riga@skynet.be> - Dec. 16, 1999
%% to add /Diamond, /SolidDiamond and /BoldDiamond
10 dict dup begin
  /FontType 3 def
  /FontMatrix [ .001 0 0 .001 0 0 ] def
  /FontBBox [ 0 0 0 0 ] def
  /Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
% DG/SR modification end
  /Metrics 13 dict def
  Metrics begin
    /Bullet        1000   def
    /Circle        1000   def
    /BoldCircle    1000   def
    /SolidTriangle 1344   def
    /Triangle      1344   def
    /BoldTriangle  1344   def
    /SolidSquare    886   def
    /Square         886   def
    /BoldSquare     886   def
    /SolidPentagon 1093.2 def
    /Pentagon      1093.2 def
    /BoldPentagon  1093.2 def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /SolidDiamond  1008   def
    /Diamond       1008   def
    /BoldDiamond   1008   def
% DG/SR modification end
    /.notdef 0 def
  end
  /BBoxes 13 dict def
  BBoxes begin
    /Circle        { -550 -550 550 550 } def
    /BoldCircle    /Circle load def
    /Bullet        /Circle load def
    /Triangle      { -571.5 -330 571.5 660 } def
    /BoldTriangle  /Triangle load def
    /SolidTriangle /Triangle load def
    /Square        { -450 -450 450 450 } def
    /BoldSquare    /Square load def
    /SolidSquare   /Square load def
    /Pentagon      { -546.6 -465 546.6 574.7 } def
    /BoldPentagon  /Pentagon load def
    /SolidPentagon /Pentagon load def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /Diamond       { -428.5 -742.5 428.5 742.5 } def
    /BoldDiamond   /Diamond load def
    /SolidDiamond  /Diamond load def
% DG/SR modification end
    /.notdef { 0 0 0 0 } def
  end
  /CharProcs 20 dict def
  CharProcs begin
    /Adjust {
      2 copy dtransform floor .5 add exch floor .5 add exch idtransform
      3 -1 roll div 3 1 roll exch div exch scale
    } def
    /CirclePath    { 0 0 500 0 360 arc closepath } def
    /Bullet        { 500 500 Adjust CirclePath fill } def
    /Circle        { 500 500 Adjust CirclePath .9 .9 scale CirclePath
                     eofill } def
    /BoldCircle    { 500 500 Adjust CirclePath .8 .8 scale CirclePath
                     eofill } def
    /BoldCircle    { CirclePath .8 .8 scale CirclePath eofill } def
    /TrianglePath  { 0  660 moveto -571.5 -330 lineto 571.5 -330 lineto
                     closepath } def
    /SolidTriangle { TrianglePath fill } def
    /Triangle      { TrianglePath .85 .85 scale TrianglePath eofill } def
    /BoldTriangle  { TrianglePath .7 .7 scale TrianglePath eofill } def
    /SquarePath    { -450 450 moveto 450 450 lineto 450 -450 lineto
                     -450 -450 lineto closepath } def
    /SolidSquare   { SquarePath fill } def
    /Square        { SquarePath .89 .89 scale SquarePath eofill } def
    /BoldSquare    { SquarePath .78 .78 scale SquarePath eofill } def
    /PentagonPath  {
      -337.8 -465   moveto
       337.8 -465   lineto
       546.6  177.6 lineto
         0    574.7 lineto
      -546.6  177.6 lineto
      closepath
    } def
    /SolidPentagon { PentagonPath fill } def
    /Pentagon      { PentagonPath .89 .89 scale PentagonPath eofill } def
    /BoldPentagon  { PentagonPath .78 .78 scale PentagonPath eofill } def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /DiamondPath   { 0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto
                     428.5 0 lineto closepath } def
    /SolidDiamond  { DiamondPath fill } def
    /Diamond       { DiamondPath .85 .85 scale DiamondPath eofill } def
    /BoldDiamond   { DiamondPath .7 .7 scale DiamondPath eofill } def
% DG/SR modification end
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
      Metrics 1 index get exec 0
      BBoxes 3 index get exec
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop
%END pst-dots.pro

%!
% PostScript prologue for pst-node.tex.
% Version 97 patch 1, 97/05/09.
% For distribution, see pstricks.tex.
%
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin /T /translate load def end
/NewNode { gsave /next ED dict dup 3 1 roll def exch { dup 3 1 roll def }
if begin tx@Dict begin STV CP T exec end /NodeMtrx CM def next end
grestore } def
/InitPnode { /Y ED /X ED /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
/InitCnode { /r ED /Y ED /X ED /NodePos { NodeSep r add dup Cos mul exch
Sin mul } def } def
/GetRnodePos { Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def
} ifelse Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def }
ifelse dx Sin mul abs dy Cos mul abs gt { dy Cos mul Sin div dy } { dx
dup Sin mul Cos Div } ifelse } def
/InitRnode { /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub
/u ED /NodePos { GetRnodePos } def } def
/DiaNodePos { w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
Cos mul exch Sin mul } def
/TriNodePos { Sin s lt { d NodeSep sub dup Cos mul Sin Div exch } { w h
mul w Sin mul h Cos abs mul add Div NodeSep add dup Cos mul exch Sin mul
} ifelse } def
/InitTriNode { sub 2 div exch 2 div exch 2 copy T 2 copy 4 index index /d
ED pop pop pop pop -90 mul rotate /NodeMtrx CM def /X 0 def /Y 0 def d
sub abs neg /d ED d add /h ED 2 div h mul h d sub Div /w ED /s d w Atan
sin def /NodePos { TriNodePos } def } def
/OvalNodePos { /ww w NodeSep add def /hh h NodeSep add def Sin ww mul Cos
hh mul Atan dup cos ww mul exch sin hh mul } def
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
/XYPos { dup sin exch cos Do /Cos ED /Sin ED /Dist ED Cos 0 gt { Dist
Dist Sin mul Cos div } { Cos 0 lt { Dist neg Dist Sin mul Cos div neg }
{ 0 Dist Sin mul } ifelse } ifelse Do } def
/GetEdge { dup 0 eq { pop begin 1 0 NodeMtrx dtransform CM idtransform
exch atan sub dup sin /Sin ED cos /Cos ED /NodeSep ED NodePos NodeMtrx
dtransform CM idtransform end } { 1 eq {{exch}} {{}} ifelse /Do ED pop
XYPos } ifelse } def
/AddOffset { 1 index 0 eq { pop pop } { 2 copy 5 2 roll cos mul add 4 1
roll sin mul sub exch } ifelse } def
/GetEdgeA { NodeSepA AngleA NodeA NodeSepTypeA GetEdge OffsetA AngleA
AddOffset yA add /yA1 ED xA add /xA1 ED } def
/GetEdgeB { NodeSepB AngleB NodeB NodeSepTypeB GetEdge OffsetB AngleB
AddOffset yB add /yB1 ED xB add /xB1 ED } def
/GetArmA { ArmTypeA 0 eq { /xA2 ArmA AngleA cos mul xA1 add def /yA2 ArmA
AngleA sin mul yA1 add def } { ArmTypeA 1 eq {{exch}} {{}} ifelse /Do ED
ArmA AngleA XYPos OffsetA AngleA AddOffset yA add /yA2 ED xA add /xA2 ED
} ifelse } def
/GetArmB { ArmTypeB 0 eq { /xB2 ArmB AngleB cos mul xB1 add def /yB2 ArmB
AngleB sin mul yB1 add def } { ArmTypeB 1 eq {{exch}} {{}} ifelse /Do ED
ArmB AngleB XYPos OffsetB AngleB AddOffset yB add /yB2 ED xB add /xB2 ED
} ifelse } def
/InitNC { /b ED /a ED /NodeSepTypeB ED /NodeSepTypeA ED /NodeSepB ED
/NodeSepA ED /OffsetB ED /OffsetA ED tx@NodeDict a known tx@NodeDict b
known and dup { /NodeA a load def /NodeB b load def NodeA GetCenter /yA
ED /xA ED NodeB GetCenter /yB ED /xB ED } if } def
/LPutLine { 4 copy 3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 1 t sub
mul 3 1 roll 1 t sub mul 4 1 roll t mul add /Y ED t mul add /X ED } def
/LPutLines { mark LPutVar counttomark 2 div 1 sub /n ED t floor dup n gt
{ pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse cvi 2 mul { pop
} repeat LPutLine cleartomark } def
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
/NCAngles { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform pop xB2 yB2 mtrx transform exch pop mtrx
itransform /y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA2
yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end /LPutVar [ xB1
yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def /LPutPos { LPutLines } def
/HPutPos { HPutLines } def /VPutPos { VPutLines } def } def
/NCAngle { GetEdgeA GetEdgeB GetArmB /mtrx AngleA matrix rotate def xB2
yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
/y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA1 yA1
tx@Dict begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCBar { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate def
xA2 yA2 mtrx itransform pop xB2 yB2 mtrx itransform pop sub dup 0 mtrx
transform 3 -1 roll 0 gt { /yB2 exch yB2 add def /xB2 exch xB2 add def }
{ /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse mark ArmB
0 ne { xB1 yB1 } if xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict
begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx
def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCDiag { GetEdgeA GetEdgeB GetArmA GetArmB mark ArmB 0 ne { xB1 yB1 } if
xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end
/LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCDiagg { GetEdgeA GetArmA yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
GetEdgeB mark xB1 yB1 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin
false Line end /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCLoop { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED /xB3 xB2 yB2
mtrx transform pop def xB3 yA3 mtrx itransform /yB3 ED /xB3 ED xA3 yA3
mtrx itransform /yA3 ED /xA3 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2
xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false
Line end /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
/NCCircle { NodeSepA 0 NodeA 0 GetEdge pop 2 div dup 2 exp r
r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
mul add dup 5 1 roll 90 sub PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
% DG/SR modification end
} def /HPutPos { LPutPos } def /VPutPos { LPutPos } def r AngleA 90 sub a add
AngleA 270 add a sub tx@Dict begin /angleB ED /angleA ED /r ED /c 57.2957 r
Div def /y ED /x ED } def
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
/LPutCoor { NAngle tx@Dict begin /NAngle ED end gsave CM STV CP Y sub neg
exch X sub neg exch moveto setmatrix CP grestore } def
/LPut { tx@NodeDict /LPutPos known { LPutPos } { CP /Y ED /X ED /NAngle 0
def } ifelse LPutCoor  } def
/HPutAdjust { Sin Cos mul 0 eq { 0 } { d Cos mul Sin div flag not { neg }
if h Cos mul Sin div flag { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { r add neg } { l add } ifelse X add /X ED }
def
/VPutAdjust { Sin Cos mul 0 eq { 0 } { l Sin mul Cos div flag { neg } if
r Sin mul Cos div flag not { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { d add } { h add neg } ifelse Y add /Y ED }
def
end
% END pst-node.pro

%!
% PostScript prologue for pst-coil.tex.
% Version 97 patch 1, 98/06/02
% For distribution, see pstricks.tex.
%
/tx@CoilDict 40 dict def tx@CoilDict begin
/CoilLoop { /t ED t sin AspectSin mul t 180 div AspectCos mul add t cos
lineto } def
/Coil { /Inc ED dup sin /AspectSin ED cos /AspectCos ED /ArmB ED /ArmA ED
/h ED /w ED /y1 ED /x1 ED /y0 ED /x0 ED x0 y0 translate y1 y0 sub x1 x0
sub 2 copy Pyth /TotalLength ED Atan rotate /BeginAngle ArmA AspectCos
Div w h mul Div 360 mul def /EndAngle TotalLength ArmB sub AspectCos Div
w h mul Div 360 mul def 1 0 0 0 ArrowA ArmA 0 lineto /mtrx CM def w h
mul 2 Div w 2 Div scale BeginAngle Inc EndAngle { CoilLoop } for
EndAngle CoilLoop mtrx setmatrix TotalLength ArmB sub 0 lineto CP
% DG/SR modification begin - Jun.  2, 1998 - Patch 1 (from Michael Vulis)
% TotalLength 0 ArrowB lineto } def
TotalLength 0 ArrowB lineto
pop pop pop pop } def
% DG/SR modification end
/AltCoil { /Inc ED dup sin /AspectSin ED cos /AspectCos ED /h ED /w ED
/EndAngle ED /BeginAngle ED /mtrx CM def w h mul 2 Div w 2 Div scale
BeginAngle sin AspectSin mul BeginAngle 180 div AspectCos mul add
BeginAngle cos /lineto load stopped { moveto } if BeginAngle Inc
EndAngle { CoilLoop } for EndAngle CoilLoop mtrx setmatrix } def
/ZigZag { /ArmB ED /ArmA ED 2 div /w ED w mul /h ED /y1 ED /x1 ED /y0 ED
/x0 ED x1 y1 translate y0 y1 sub x0 x1 sub 2 copy Pyth /TotalLength ED
Atan rotate TotalLength ArmA sub ArmB sub dup h div cvi /n ED n h mul
sub 2 div dup ArmA add /ArmA ED ArmB add /ArmB ED /x ArmB h 2 div add
def mark 0 0 ArmB 0 n { x w /w w neg def /x x h add def } repeat
TotalLength ArmA sub 0 TotalLength 0 } def
end
% END pst-coil.pro

%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSS8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMSS8 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 97 /a put
dup 103 /g put
dup 104 /h put
dup 112 /p put
dup 116 /t put
readonly def
/FontBBox{-65 -250 1062 761}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF4E9D2405B17498276F99362748F6E97327D
7CDA3F577075245561191667923D37830EEC37A0161B6A3EC8FDD63CDB8C8D4A
AD39C69A264813FA79C25E85AC95C71AB965F6C14A4A1ACF5BAE27A5F628B172
47CF6A12008558438874199C237501B72BFEFE64B606A327623BD8B217E8349B
7BF5C2204F4DE2FB269845D5714A31151A66064419CCC46A63F8E54B92B5070F
F3D80801DBEC658CD3926B15BE3D4B7591FC36663D3C03926D0D3637B53BCC22
73C8E0001B416A65FC67C53383458DC125FD14FFE391BBBA321B5AF5DEF85DBA
5A5FD759FD2AAB6AF31CDA6202EBB763E3CAC1FF91B1175EF818FD662B60C642
738A3B4F27822A0560BB7C08AD42F976351FA5225A0E6D56C7FBE06A809CC468
FB2E90C84FA56C62CB7BBFC80BD94F5C6BC0EED14433A4A356D2D15DC87B34B0
99A100502F55A32D736757642F9F9719FD9E35A1430A72C254614B4000113705
5474FCFCE47A6978F69FA467B818309E61598EC18089BB924C393B3FF1280D72
E1969BF5AD3D1074FF13202D4CC324396BAFF2397DAB2C516C656B6B240F023D
0C28AEBB957C23012C971D444DD1C4C2BD7DCE178D46CF8EC20DCAB9A930907E
124F3B3B8D16DBF166BA40CD780DE2155BF21EC2C3E0073422E54A09DF4A9491
63B55882122F6B40490D81533CB0E16967E32D4F5B5D5D14F578BAA0137704A3
2386E6AA4E3D160559EB245625253380CE64C30B41B573D7249B0B6157B02EFE
0D82006B4CF4A294FDDAB5B87CAD0B2D3367F9138EE0922FBDD3D7BFE4C6B297
762F95616A75D0FC2D2E22D79172DF1A3287C67BD27658A448FC61077B3033AA
5479ABBF5CD952B5E19E437CD642CDC43FBB26115DCC019FEB3195F336813569
89C3C08D0BDC63003FA947D1630FFB774005B1E8D33454712F410DDE07901E87
A31D3484A17262ED2A34CB474C73649FA7065B662BF1E39AF16D2B84D0F93D88
17368AB7D39E65BEA39E7CFBBCF47B4FF5C917BC8205461240DFD8EB78FEE900
B72A33F4004E028ED9121C617E093A5C13C003CD7F53674A07252DB036E54253
1BCC1B1873F4953938F4A209C1F19C0090223ECD01B2F914DC545419075D7176
A1FAA5D2B198A7A5C977549D785894801A5322812159D6844CB5EFA60FE0C721
BC895F4365D11BDAC5AFE91C0FCCF003689995A2F4462D7D32177EA948162DC5
18809A2E4D0A5C463748608AE875BA1FFA09EE68EB7C2090ADF53CD95425C8AE
32931FF1AAFF93CCFE160159E2AE88CD3AF7B1EA769AB5D848117C24CAA1D265
992CBB19409E0BC11513C38CBB0E41CBB215E68B446C1F5C1E6978407B1C3A66
0FB20CF6D8EA1B3AB1B8C4DD1331A7069069552E8BAD4CD33B8F810335F36541
5D02A033B99713A8DB1782B932BDD053E6BA16CB238B00311E3848E68E076581
AE5FD12901BB7CDBB2436CD5FD59A8A8CABA5E59ABF35D4E007818550EA4D30D
BE1F9D4BC946073245986D827193C7803AADC5EB2451B14B290D8AABB849168C
A96A86425A86C988E03EAD925A0019588F1A71DBEEEDB40DA40D69D72F801117
A8D6CD69E81E3594C2573DE0CCB90F90BA9572D849E3CBA52716CD0924F52D75
FED411B336A1FADCA9724E230AD80BAF86E527AFAFDD419D79E549848924CEA8
CF2D84B9E1E486C1A49369E252AF315204584A84C8606F0B2D01B765F588ECF6
67FFB196B33C2AA4C9414A11A079B2F8CA9645A4475CA762F4860D91CC0D07E0
631D19AFAD7D87383AA91386E373530E984E3A51144BFFC75CEEEEB290E53822
DB03C4F7C71C2191AC1DDC78B663B52CEF1C32F2868B5F31D570210025270329
2048E984BE26F8948DE0F8C1F3F63F9E4293EF00930AF54435339989BCD7741A
144219C0E2FE08D44EF8BEEFB3AD024A6050AEF04DEF1C6B91B648D20BF886A6
23A00DFD38A5E58970E9C6B4195DDE7F6260FAB4B27FACF26417E42694CC5BBD
F12A3CFD6C372CEBB4ED5278DF1A3900A74C5D577391C1615FC1AE9CFCA9DEDE
1651C0EF0A8C001FA73D930F9C34A0329DEB8B0F7A18B79605F13C3C2D6A24C0

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTI7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMTI7 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 77 /M put
dup 97 /a put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 119 /w put
dup 121 /y put
readonly def
/FontBBox{-27 -250 1268 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D77639DF1232A4D6233A9CAF69B151DFD33F
C0962CCA6FACCEA6B71BEEF7C056FBD376F2F0D0BD6BE0A0A8259139B28B99C6
25119B8C60FF7BA002476930DFDC2F6B1B5A80F1C0E544A22E3F0FB2FEAB64B6
A509B61E1AB96121FBF7F2BC27CDE5B4961048FC2169C8DB745FCC7AF0EED507
284038B15CE53E69AA22CA76C2A208F6AD8614CD500D479A5E0FD25E7BB14C7F
C47C503E4CC38975CB0A8F7E109665FB69EBAE6EB68B2D6FA3C967D5BDE7830E
9CE6F13DFAEBC852DF1D7D0CDD33DD4D5CD6D94DD8AE0D48AB638013CF75A25C
04FDEA8775EC52A13AF40FA41F7354624D917EE620318C702237AF8C0E1FFA02
127F862D4DFD0A56774235A881AFBB8F7F4BCB33811C581CFF38462F669B7F97
1F97AC09373B8F9B7E653013AF8170613E8D7E17235A893BE296A0CD2096B71F
16778388993EDF1B003EBCE23DD02949CBFAAAB5D9F6A08178BFB8ED1043FC1B
0B90D9AFC27B19783740E8DDE0E5E01D116A8CB083C721FBB8EBF71018A9570E
78590CD831116BC0FDA4229F79A581874FC3A1F108A4FCA80CE27FA54A2A7505
5BDB3D52E2595512837732322FB5BBE459C0205EB38439E34A39544F0A1567C6
F29FBB7CF931708C8F92786CCBCBB443D54462B3B4B7BD38E90D325EBC31BA05
FAAB393C7EBDB9EC48E4ACC15A247D2348A62293A726FCA4250B4A407F64270F
923EB516CB8A3B5D19876C8755EB291357E4E4CC5903D1A536A635E267F7A971
B1C33AA7F58E1ADA931C450EA8367B18E20E683CCEEC1BC079E837DDAFFF0D16
23C4AED0DC04DD9458A630FD498794823FFA55705315F0687E7592A5DFC8B8D6
FE2F3C67C95E1B84FF54BFAE9F340D0D4495C7F6E55AD4347F6F6A83A898B08B
8B303AB7257AEFCE91F790F8DD2CDFBDFCE25DB097F89E3A1DB5C665540CA68D
317E018F90E81D88B13CE63C0E1061652987771E9ABCB8AE808157E4970186EA
57BBF39727E59A6D0CD607DC1687EE803B9E341A7D3354CD48A9BBF6CE912EBD
2E1E5B68A7532DDB16501D3F1752C8F1851A861B56EC55CA7D47E19C7619AF0D
AFFFBEFFDD61FBDAE31892B143A33388CF2E7EDA3C0ACE00BFA51BE57759116B
84F24B48B69A603EB9F3FE67FF1A9CB100E3393A273546A12853793A1D94C4CB
5518B8418BEE4AA532A93FB67A44BE81AB5C385F322E233FD85CFA2F71601D12
197228B6B797D562FFD9961098741BBAA0D2E86A154CB87C0073472F451E6D97
6BBBE8588C94652BC4DC9A501A9257ADDC3575B9577635522DA023CF12A5C6B6
46C9D0FD2B05348D1D64550A687AACF22C98EBB6BC8AAC15BBCAA504A8499104
9AB903533B8BA6A765C8526F6F77103EEDD2DA44CFB15643AA417452FD5801BD
037135EA03B1168FE87236A32ADF9C85EED99BFE8AB6D403E229E38EF8C2669C
07D41F9B3846E29039C7BC328021CE603D596C9DC07D158552148B8E6932E736
B9B7AA1290C88C6AD925F206B1EBEDF1643A25602BE5257242090F202439219B
221630613711ECA7831E009895532548966C0981FF31E6729E398EA96A448C09
64CDDD9CB8E373B538C87E11A92EB55CCFD09213028D5A4A61B450373FF0998C
EDFBE3F252DE2423FD32AE19D01EA0568FDC97B976AF5EEE0D7BE9EEFCC6497D
21FE4D8EA7C4A795C89FFE7AA5B28CFC2936280EF682FD8299B7B60D0E1FEEAF
FB6B96449C99CF96FD8FD218E4427665D3E7EBB187487A12FA6ED1FE98F5E5DA
76F9B1C3A33571DC7988D97962390F124C99D03D1548DA4913BAFD63AD49988F
693F140F0256A2B48D893DA375BD67E63EB64799007AD92883797207CD6360BC
ED7B12645705AA6AEF4D1EEFC45119A716C671F7FCA74C1AB763725230B3CA68
625832608EB18DDF779C9D4FD327D1B1D7AED99CEC87B32E8D14AE2DAAFB5408
FE1C591CA20E5E034B2F11BD6C1A4C8D8B41887E17633E7BA7C369F45A9E8CEB
341821D42EFC9CF672DF998164B09B1F994D35B5D37895B841338AF759D71E63
E0B7BACBAC9271FCD7D12E75E8B92EE9BBEB455E9F8A436D1DDDA69E758E1AB5
9CFD99601F99219959883018A3EFBB89F593799586C6EC1BBDA0813C3D046D2E
A7DF824F98AF2817D7C5E3208DFC8356E81305EADA6448FF9C87F01E5C171E9D
2C6F53E0ECA0BA6AE309D7B0E242977A3CD5E3331B02182A940CDD437BB09D9C
C14A19E735131AAAFF3F41ADE6C2681EDD9CFA77F4225536D5FB950B1DC6BDDE
969B626A4C1DFFCF7B3A6C1FA42635BEEC8AF9A90E88DC1E8C01CB8B2BB714AB
489BC4A0A897D9A625AE7FAC481F962EF743AFC1B020F7149F79467DA8FB8010
43C0D4FEEE16A691A11F28F126ECFF937FAEBF21C7F5018037DA5A8573CE02F9
A3BE8654709F4D0CBCB4F60E9338CB9B43770EF348D1213D8BD98212AAF93335
DF7C6AD8AF205E5A4D52022B5DD7FDB3D9CC465BE0B2F19E8F2971CAC440FC5E
A4BD3E2AC3E0C4C2661C51CBCDC6F7422FAD057B63682176B0DA7C2032E469CD
DB1C1C932921B33446BEB51A8A8DE4F104FE429640CE7EF471EAEE9F371DF424
281BE648ED9BBB4CF8ED05D0FC33EE3FE2E6FDAF443E52FFF382567568704800
F9D85F0F8D8F5B9184A81615437282E39E3A09C70F69A351685229AF21151693
A9C6106715155080AED81F76F76AB0E051BB267C9C54F66E0E13B0E7C1BDE123
3D67F95F777BE8A0E270503A41A89661D88A09C81F40A959DCBF5564493A50FF
506EB6602790EEFFDC6AE20C158354E5CFCA6548DC212E0B61E63D192BEF3334
A59C1CA5F1245AAD1A475A5CF05944BE2BFBDBC648DF256ED4BFD29E55F22E10
24DBB345E5C70EDE9F7E940C04340806DF5FA96150497809A748803685EE3503
B16DCFE3425FBAD28D92FB946CD702DF745EA6C55F1E694168F4F2844EB07803
56BDABFBC73C7B182304A0BF74D1AA5CE7FDECEBFE8EFF07D18CA02866A5A986
5E64413DFFA37C26701541BE1FCAC7F29F0A929A7D625466B9D261D5E8CFCDDF
6BD77BD3F4CBCCC6E3D3330FBE87CD338ECFA4900F8663C495530739B8D61C77
A1D4FCCB9F5B91F844661E176BBAC999B04F8523ED6FC507556206E503E03302
21748478441E7B64F720F28C4027647AC4A7297D149C4D4CD6387C14B522C78B
C26F26BCDAF1653DAA8DA452F266CCBDEFC02CD8011E59EF36F1439E253F7B34
EE8F36BAE2D3379D0A0658AB9DB370B287FE1B8CA9FA2854B633047E666159EA
6165A2307A41B0BB90C54862603F7B2D31FF4A8A29E5ECCA994E849A751BE6AE
16720FB188B87143D8DDA0370655676F03011C0B73B3D1FF1666F0C66ADA2060
F7292196AD24D410CA5F619B0715784FCFA2C8F2A0FB0C1799BBD2B267DE26FC
6A164A574CDC261C914A53CC1B4BBF0306F5072E49019CA6CBB0EEB0D7C132C5
18FE05F9C219D867ECD9EAB7B089E53BFCD45C1048CF3F5887B22EB31F5019C9
31A8548AAA15D76AC41641A4042D0EEEC299AD7607B8790C52250ECB6FAF8D7C
E106B6416B04B22BCD8F96969C48C8DED8D5335A31228715B1033F35848F323E
30A40E7DF5410EA6E091CC8B9B3322FAEB408EC51C6E023697301676C6096C05
08E64EDC7F6006BDE7664BAD870674EE2DB8C8D49EA9D3CBD6D02272FAA42753
E7B382B43CF71A8A11F9FBF7C393AF5093836B013E84C3B69E7AA60AAA8AE4A0
782A739F2196DCFFE46348659D6706BF96A7DE0BFA9B3E953F6F3206CAF7F25C
0FA87152C24806D4B0D6183B2E5FCD732E7CA133FA92D7741E8D5137E2D974CC
90D11C948134F1FFB17E482FFF031447D63F2E36E2D3DB847A3826C757D4DAB8
90819439E9DDC4AB73CA2962670D05E6A329092B9AFDD708F772ADEDEA76E6D2
09342D7605CDF577D541DF904EB8256D2FB7B8FE849FB4037B03EA1201970D6C
7AE835F98EC6287F350D37E727423523285D69E392DC1DF03359870556E1B00E
65ECE1667E8CF4ABD247A2FCCFFE9CEFE938328E991347932FFF57DB5C393900
FF095B57D18CC14DCCC40F7FB853B80A1E9C8349E082071C8848DEA8684E4DF3
785DC20F9FE1468E9A59B2CABCCAB345B754A81F38C0AC5D05C91AB424953E52
D8D5942F7268A0CB29D7C79DF3B9B008A96C2AA43E537C62838BC32A65AE177C
1488DCA01944946F2CA2D6F183BE6B59CA8CDF2C2D5E48375CDD83C8B3B80970
77B7436CADE71950C3588C6E2B815ED62763E64B4729B9B3779F275A4637113B
B8AE44AE39C7E14AED31B96BFF3AC81D955115D2CAFF03D95CE17C04BCC39327
4ED295FBE54EF05D11A4B6753CF96074C8A4EA4E535B1E128140E96B538361F4
6A4F07A388E9E5A14A94987641D8CB2EEEB7BCE04069C68BFFDBDDB13FBB9B7F
54C9E0AFDBF489BC12A5FBE0F2F42CDE21BF02A136C120590E14C8A7ABF01230
33A20255884331D20715798663B556BAAB58FAA90A4339BCBB405EFE9725A602
ED0A33F1D3512B60B5C4677E803DCC71F07448CFE699EBD7DED951AE11CD2BA1
AF2F09CDB87F8A41AB6422B41E517BD8A5BBEA307C676817CABFF3C4156549EB
EF210040CD1E6112A2BC61E4689A5D01125EA62FDF7D010E63F70FAF1B2EC364
031667D754174E6DA82523C570D4043B4A262B6E768B578C5A8A6301AE1F302D
6B0E4F9C1C805FAFABE901EE595FB8C127D91ABFFB5A1B00A37EEF9AEE74836C
AABF0CF9B0EB3116D5C633F7416E5617658ABF24F048555228ADCD8EDB912F1E
B55D3D7A971C2588C5DAAFABEE9E20064D4403B0D297B65293A56E632E51431F
0798027A206DA45AF5F908D189F874886DFBCA69602CC4941A13A415570AE298
F4626DAD38AE499903B0D00C25CF29C2927CC87C0095CE53872B0D5F869FB265
0A0778BDEDCB947D8A584C4E7C3EBD80790F5FF3F81BA79D68DAABFD8A07D717
7639F0C88C6B270F36A311C0F210AFA38401A532C98ABB4117068231FDD5810D
A3EA322D8B279B4D9161B6C1E41008FA92139BCF0188DB3C662EC155923C3E35
70760D92C0F214459EF6815A09572E8E794A6B18D77674098A6CE88C8DDDBD12
706D958FE61786298E50050E6698F33B576FA0A1A70B11341B9DCDF611C2482A
526745DFB2B0D6980AC686668830789C313ED61AC1C38C81D0DB6E887495996B
37E4F22D27C9D6838648C376A9D07CB563A64DB7CF1354672123E34003FABD2E
459F7619AEA4F7607D8D8596FC4D1C1592BB2C43EA375CC8D67632C3027399D2
6776F6B0D1547FCF9F5B306409118FBCEFE4F189F168637B72B39D00314091BF
697AFA54C292324CC7390DAB9BC9083798A0A65690FD5E83CBA73437DBCA5822
05E28F5CA7086766431771270F8B8D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR7 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
readonly def
/FontBBox{-27 -250 1122 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF5B8CABB9FFC6CC3F1E9AE32F234EB60FE7D
E34995B1ACFF52428EA20C8ED4FD73E3935CEBD40E0EAD70C0887A451E1B1AC8
47AEDE4191CCDB8B61345FD070FD30C4F375D8418DDD454729A251B3F61DAE7C
8882384282FDD6102AE8EEFEDE6447576AFA181F27A48216A9CAD730561469E4
78B286F22328F2AE84EF183DE4119C402771A249AAC1FA5435690A28D1B47486
1060C8000D3FE1BF45133CF847A24B4F8464A63CEA01EC84AA22FD005E74847E
01426B6890951A7DD1F50A5F3285E1F958F11FC7F00EE26FEE7C63998EA1328B
C9841C57C80946D2C2FC81346249A664ECFB08A2CE075036CEA7359FCA1E90C0
F686C3BB27EEFA45D548F7BD074CE60E626A4F83C69FE93A5324133A78362F30
8E8DCC80DD0C49E137CDC9AC08BAE39282E26A7A4D8C159B95F227BDA2A281AF
A9DAEBF31F504380B20812A211CF9FEB112EC29A3FB3BD3E81809FC6293487A7
455EB3B879D2B4BD46942BB1243896264722CB59146C3F65BD59B96A74B12BB2
9A1354AF174932210C6E19FE584B1B14C00E746089CBB17E68845D7B3EA05105
EEE461E3697FCF835CBE6D46C75523478E766832751CF6D96EC338BDAD57D53B
52F5340FAC9FE0456AD13101824234B262AC0CABA43B62EBDA39795BAE6CFE97
563A50AAE1F195888739F2676086A9811E5C9A4A7E0BF34F3E25568930ADF80F
0BDDAC3B634AD4BA6A59720EA4749236CF0F79ABA4716C340F98517F6F06D9AB
7ED8F46FC1868B5F3D3678DF71AA772CF1F7DD222C6BF19D8EF0CFB7A76FC6D1
0AD323C176134907AB375F20CFCD667AB094E2C7CB2179C4283329C9E435E7A4
1E042AD0BAA059B3F862236180B34D3FCED833472577BACD472A489B11C4D43C
322B4ED6E6EE9BBE94DF8FDFFD8D2FB3C0BBF6760D67D00E35BEC9C6993E9FFF
E7B7D065F3F375F5F50C0BF788178E4D4FAC2C72DB540B71DDB6B8C0A8B74476
E807C7D23174DB539508ADCF6C2A9F9885CA501DE7E792D066082ECD42C3468B
B673B9128B428EEAE4EF7D5789BCBD1EF24FF61C65B1CEAD2234F38B34D8ED28
F57031138C5F0874CBACCB5A719947A7B47B20D2EED82010D0ECD0169B13726D
42A3A6EFD40030175AC2C357062C28E06B431A7D891D8DF216E905FCA02B5FFE
0BF7F8D43C396DDC2C16E82FCF2B3BA6DC0E4945FAC10FF6F62450841C70F13C
C4662EAB1CC6A27317178D0054A3296E6CC3DC569748D4A3D96B98A50C9D363D
CE621CCBE3FD3F2EA5EBB05E1790369397D67D6B61763E1B6B492BE91D347504
E5C7B5DE81F2AAD909E994D900CA1EE1C8E4A3C3246F76A1FCA733EA3EFF977B
E00D3534A364ADCC3A9F3269FD3EFDF05002C97AF771A3D7778DD2201A0839B6
1337507FB61829FA20A1196E9A856101E7D31F0482D9F298A2A8F1596610D69D
C0AB33ADB88BB50F6C898F4F31229DC9E2647C6F1E61AC58ECBE004BBE0DBD7D
45AAEBDB9B0AFCB4406EBE0BA8483065C91537F79066663E4E7AD4D11AED174E
71D80A9F2A265DBF2C5E7E24157920E2A258859A20CF68FAB5ECFCEF27487AD0
583D9FFF0FDD64850968F4B24D144AC067B9889F5EA8A414C86507134811AFFC
A90C41279F0FEB8344C5F383E9EE1DA711977189E349F9917F3152505C088B28
8342DD1743B2ADD59D4D9856212405155E2DDBCCAECE91842457D6D97B8E7D6F
A85D020D82C5ED785836F2A4BBEF955987FDD4BDA973653AA8EB1A34A978B6B1
EA3AFB5F2B98DE9AA98D97327FE9142E0795DDE091831BDBD37A8E8586635E56
DAD6CC7184B1CF033CE2EF19167B0005B34CCAD2ABED5156F969C168721CD66C
30AE6C6E4B48C0C54F6BD40A898C736676615C1A50FF0955BE1CB2C0B833CF01
2C4E883CE00EE6E4C25D4CD25D3AA5A9B9EFA335D65693DCA1EBAFE7FCA60C60
99559F28AA4FD8D8912DA1E47585D48AC0651E9B415D0D9461F24D841F13B5FC
FC2FDF16D0B05BDE8E5219BB1D7FDA47EFBED57BCC6662F77FFD687896F1B86F
76FEAD10BF1A6C27CDEBDA123B69F7D0D897B945CD9F59A384181A206AB492AD
66F6C137D807737659FD29641A3C3E5EA13A6AFCAC94F194A9A6E43862FD02B8
A33D16E794BCF3022AB63E2DE441BD788FC7920DA97F47D4DE0C7E9C75166B25
8671C98C60549D1A347FC24E72CB17A01C4B4514A9BEB82722ACA05D2CE8D4FC
26E6B37EC7744F70A78BDC4A5729D541B5731DF18EDCE471CBED25E4FE7C0B68
441AD5ED62893BDA72C65A4E4FBE3AB250F1FED843700188E04F2B765DC75469
F4FCDC6DDC7A70E4E3006F82A9FF8724C4ED5B75D60CD5403DDCABE70C362C56
4BA841FF1E76B03AE03A5156925FB30E1535D1B27A1FBD292A9163CC4E6BB34A
FD2A5E2CCE1E6F41D6E2661E18D14303D9959B4D763B9BBD371C49E94846F196
D16DF822CDC6E6C67493D700589ACA628BC60AEE755B021B640118AEAB84055D
6090A221107F43427C33256FE944D300
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
TeXDict begin 39139632 55387786 1000 600 600 (sem1_xdag.2.dvi)
@start /Fa 139[22 3[32 7[32 31 5[30 97[{}5 58.1154 /CMSS8
rf /Fb 134[33 1[45 2[23 28 29 1[35 35 38 4[21 35 32 1[32
35 2[35 19[61 77[{}15 58.1154 /CMTI7 rf /Fc 201[33 33
33 33 33 33 49[{}6 58.1154 /CMR7 rf end
TeXDict begin
 end
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
1536 690 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 3.41418 .5 CLW
mul sub 0 360 arc closepath gsave 0.8 SLW 0  setgray 0 setlinecap stroke
 grestore end
 
@endspecial 1536
690 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 3.41418 } false /N@XDAG1B3
11 {InitCnode } NewNode end end
 1536 690 a 1203 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 3.41418 .5 CLW
mul sub 0 360 arc closepath gsave 0.8 SLW 0  setgray 0 setlinecap stroke
 grestore end
 
@endspecial
2739 690 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 3.41418 } false /N@XDAG1B6
11 {InitCnode } NewNode end end
 2739 690 a 1173 824 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 3.41418 .5 CLW
mul sub 0 360 arc closepath gsave 0.8 SLW 0  setgray 0 setlinecap stroke
 grestore end


@endspecial 1173 824 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 3.41418 } false /N@XDAG1B2
11 {InitCnode } NewNode end end
 1173 824 a 1858 957 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 3.41418 .5 CLW
mul sub 0 360 arc closepath gsave 0.8 SLW 0  setgray 0 setlinecap stroke
 grestore end
 
@endspecial 1858 957 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 3.41418 } false /N@XDAG1B4
11 {InitCnode } NewNode end end
 1858 957 a 760 1091
a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 3.41418 .5 CLW
mul sub 0 360 arc closepath gsave 0.8 SLW 0  setgray 0 setlinecap stroke
 grestore end
 
@endspecial 760 1091 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 3.41418 } false /N@XDAG1B1
11 {InitCnode } NewNode end end
 760
1091 a 1520 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 3.41418 .5 CLW
mul sub 0 360 arc closepath gsave 0.8 SLW 0  setgray 0 setlinecap stroke
 grestore end
 
@endspecial
2280 1091 a
 tx@Dict begin tx@NodeDict begin {0.0 0.0 3.41418 } false /N@XDAG1B5
11 {InitCnode } NewNode end end
 2280 1091 a 639 1274 a
 tx@Dict begin tx@NodeDict begin {12.25 8.75 29.03633 14.51816 2.1097
} false /N@XDAG1W1 16 {InitRnode } NewNode end end
 639 1274 a 743 1213
a Fc(1)681 1330 y Fb(Mary)1046 1274 y
 tx@Dict begin tx@NodeDict begin {12.25 8.75 30.49463 15.24731 2.1097
} false /N@XDAG1W2 16 {InitRnode } NewNode end end
 1046 1274 a 1156
1213 a Fc(2)1088 1330 y Fb(wants)1466 1274 y
 tx@Dict begin tx@NodeDict begin {12.25 8.75 17.00562 8.5028 2.1097
} false /N@XDAG1W3 16 {InitRnode } NewNode end end
 1466 1274
a 1520 1213 a Fc(3)1507 1330 y Fb(to)1773 1274 y
 tx@Dict begin tx@NodeDict begin {12.25 8.75 20.40564 10.20282 2.1097
} false /N@XDAG1W4 16 {InitRnode } NewNode end end
 1773
1274 a 1841 1213 a Fc(4)1814 1330 y Fb(e)m(at)2108 1274
y
 tx@Dict begin tx@NodeDict begin {12.25 8.75 41.42247 20.71123 2.1097
} false /N@XDAG1W5 16 {InitRnode } NewNode end end
 2108 1274 a 2264 1213 a Fc(5)2150 1330 y Fb(sp)m(aghetti)2618
1274 y
 tx@Dict begin tx@NodeDict begin {12.25 8.75 29.05573 14.52786 2.1097
} false /N@XDAG1W6 16 {InitRnode } NewNode end end
 2618 1274 a 2722 1213 a Fc(6)2660 1330 y Fb(to)m(day)2859
908 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@XDAG1B1 /N@XDAG1W1 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 3.0 0 0 add DotLine  grestore  grestore end
 2859 908 a 2859 908 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@XDAG1B2 /N@XDAG1W2 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 3.0 0 0 add DotLine  grestore  grestore end
 2859 908 a 2859 908 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@XDAG1B3 /N@XDAG1W3 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 3.0 0 0 add DotLine  grestore  grestore end
 2859
908 a 2859 908 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@XDAG1B4 /N@XDAG1W4 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 3.0 0 0 add DotLine  grestore  grestore end
 2859 908 a 2859 908 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@XDAG1B5 /N@XDAG1W5 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 3.0 0 0 add DotLine  grestore  grestore end
 2859 908 a 2859
908 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@XDAG1B6 /N@XDAG1W6 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 3.0 0 0 add DotLine  grestore  grestore end
 2859 908 a 2882 908 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { BeginArrow
1.  1.  scale false 0.4 1.4 1.5 2. Arrow  EndArrow  moveto } def /ArrowB
{ } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@XDAG1B1
/N@XDAG1B2 InitNC { NCLine  } if end gsave 0.8 SLW 0  setgray 0 setlinecap
stroke  grestore  grestore end
 2882 908 a 2882 908 a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 2882
908 a 2882 908 a
 tx@Dict begin NAngle  RotBegin  end
 2882 908 a 2851 915 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.0 SLW 1  setgray  0. true 1.0 neg 2.3611
neg 8.39503 4.1111 .5 Frame  gsave 1  setgray fill grestore end
 
@endspecial Fa(ag)2882 908 y
 tx@Dict begin RotEnd  end
 2882 908 a
2882 908 a
 tx@Dict begin PutEnd  end
 2882 908 a 2904 908 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 1.5 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@XDAG1B2 /N@XDAG1B4 InitNC { NCLine  } if end gsave 0.8 SLW 0
 setgray 0 setlinecap stroke  grestore  grestore end
 2904 908 a 2904 908
a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 2904 908 a 2904 908 a
 tx@Dict begin NAngle  RotBegin  end
 2904 908 a 2877 928 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.0 SLW 1  setgray  0. true 1.0 neg 1.0
neg 7.52611 5.8611 .5 Frame  gsave 1  setgray fill grestore end
 
@endspecial Fa(th)2904 908 y
 tx@Dict begin RotEnd  end
 2904 908 a
2904 908 a
 tx@Dict begin PutEnd  end
 2904 908 a 2927 908 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { BeginArrow
1.  1.  scale false 0.4 1.4 1.5 2. Arrow  EndArrow  moveto } def /ArrowB
{ } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@XDAG1B1
/N@XDAG1B4 InitNC { NCLine  } if end gsave 0.8 SLW 0  setgray 0 setlinecap
stroke  grestore  grestore end
 2927 908 a 2927 908
a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 2927 908 a 2927 908 a
 tx@Dict begin NAngle  RotBegin  end
 2927 908 a 2896 915 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.0 SLW 1  setgray  0. true 1.0 neg 2.3611
neg 8.39503 4.1111 .5 Frame  gsave 1  setgray fill grestore end
 
@endspecial Fa(ag)2927 908 y
 tx@Dict begin RotEnd  end
 2927 908 a
2927 908 a
 tx@Dict begin PutEnd  end
 2927 908 a 2949 908 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 1.5 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0
0 0 /N@XDAG1B4 /N@XDAG1B5 InitNC { NCLine  } if end gsave 0.8 SLW 0
 setgray 0 setlinecap stroke  grestore  grestore end
 2949 908 a 2949 908
a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 2949 908 a 2949 908 a
 tx@Dict begin NAngle  RotBegin  end
 2949 908 a 2907 919 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.0 SLW 1  setgray  0. true 1.0 neg 2.3611
neg 11.09906 5.00002 .5 Frame  gsave 1  setgray fill grestore end
 
@endspecial Fa(pat)2949 908 y
 tx@Dict begin RotEnd  end
 2949 908 a
2949 908 a
 tx@Dict begin PutEnd  end
 2949 908 a 2971 908 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { BeginArrow
1.  1.  scale false 0.4 1.4 1.5 2. Arrow  EndArrow  moveto } def /ArrowB
{ } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@XDAG1B2
/N@XDAG1B6 InitNC { NCLine  } if end gsave 0.8 SLW 0  setgray 0 setlinecap
stroke  grestore  grestore end
 2971 908 a 2971 908
a
 tx@Dict begin tx@NodeDict begin /t .5 def LPut end PutBegin  end
 2971 908 a 2971 908 a
 tx@Dict begin NAngle  RotBegin  end
 2971 908 a 2944 928 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.0 SLW 1  setgray  0. true 1.0 neg 1.0
neg 7.52611 5.8611 .5 Frame  gsave 1  setgray fill grestore end
 
@endspecial Fa(th)2971 908 y
 tx@Dict begin RotEnd  end
 2971 908 a
2971 908 a
 tx@Dict begin PutEnd  end
 2971 908 a 0 TeXcolorgray 0 TeXcolorgray eop
end

userdict /end-hook known{end-hook}if
%%Trailer
cleartomark countdictstack exch sub { end } repeat restore
%%EOF
